name: CICD

on:
  push:
    branches: [ main ]

jobs: 
  build:
 
    runs-on: ubuntu-latest
     
    steps:
    - uses: actions/checkout@v3
   
        
    - name: Set up Docker Buildx 
      uses: docker/setup-buildx-action@v1 
    - name: docker ps
      run: docker ps
    - name: ls
      run: ls
    - name: docker build
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/flask:latest .
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/flask:v1_$GITHUB_RUN_NUMBER .
        docker images
        
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: docker push
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask:v1_$GITHUB_RUN_NUMBER
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    
    - name: kube_config
      run: aws eks update-kubeconfig --region us-west-2 --name daun
    - name: get pod
      run: |
        cd yaml
        kubectl apply -f .
        kubectl get pod
        kubectl get svc
        aws ec2 describe-subnets --subnet-ids
        
    - name: ingress
      run: |
        eksctl utils associate-iam-oidc-provider --region us-west-2 --cluster daun --approve
        curl -o iam_policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.4.0/docs/install/iam_policy.json
        aws iam create-policy --policy-name AWSLoadBalancerControllerIAMPolicy --policy-document file://iam_policy.json
        eksctl create iamserviceaccount --cluster=daun --namespace=kube-system --name=aws-load-balancer-controller --attach-policy-arn=arn:aws:iam::940168446867:policy/AWSLoadBalancerControllerIAMPolicy --override-existing-serviceaccounts --approve
        kubectl get sa -n kube-system
    
    
